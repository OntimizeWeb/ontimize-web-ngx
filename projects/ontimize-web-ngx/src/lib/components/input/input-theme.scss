@mixin icon-color-mixin($icon-color) {

  .icon-btn,
  .mat-icon,
  .read-only .mat-icon,
  .svg-icon {
    color: $icon-color;
  }
}

@mixin input-theme($theme-or-color-config) {
  $theme: map.get($theme-or-color-config, color);
  $is-dark-theme: map.get($theme, is-dark);
  $foreground: map.get($theme, foreground);
  $warn: map.get($theme, warn);
  $underline-color: mat.get-color-from-palette($foreground, divider, if($is-dark-theme, 0.7, 0.42));
  $primary: map.get($theme, primary);
  $accent: map.get($theme, accent);

  .mat-mdc-form-field {
    &.mat-form-field-disabled.accent {
      @include icon-color-mixin(mat.get-color-from-palette($accent, 0.42));
    }

    &:not(.mat-form-field-disabled) {
      @include icon-color-mixin(mat.get-color-from-palette($foreground, icon));

      .placeholder {
        color: mat.get-color-from-palette($foreground, icon);
      }

      &.accent {
        @include icon-color-mixin(mat.get-color-from-palette($accent));
      }
    }

    .mat-disabled {
      color: mat.get-color-from-palette($foreground, disabled-button);
    }

    &.mat-form-field-appearance-ontimize.read-only {

      .mat-mdc-select-disabled .mat-mdc-select-value {
        color: inherit;
      }

      mat-label {
        color: $underline-color;
      }

      .mdc-line-ripple::after {
        background-color: $underline-color;
      }
    }

    &.mat-form-field-invalid .mat-mdc-form-field-icon-suffix .mat-icon {
      color: mat.get-color-from-palette($warn);
    }

  }

  input:not([type]):disabled,
  input[type="color"]:disabled,
  input[type="date"]:disabled,
  input[type="datetime"]:disabled,
  input[type="datetime-local"]:disabled,
  input[type="email"]:disabled,
  input[type="month"]:disabled,
  input[type="number"]:disabled,
  input[type="password"]:disabled,
  input[type="search"]:disabled,
  input[type="tel"]:disabled,
  input[type="text"]:disabled,
  input[type="time"]:disabled,
  input[type="url"]:disabled,
  input[type="week"]:disabled,
  textarea:disabled {
    color: mat.get-color-from-palette($foreground, disabled-text);
  }

  .o-tooltip.o-mat-error {
    .mdc-tooltip__surface {
      background: mat.get-color-from-palette($primary, default-contrast);
      border: 1px solid mat.get-color-from-palette($warn);
      color: mat.get-color-from-palette($warn);
    }
  }

  /* CHECKBOX */
  .mat-mdc-checkbox:not(.mat-mdc-checkbox-disabled) {
    &.mat-accent {
      .mdc-checkbox .mdc-checkbox__native-control:enabled:not(:checked):not(:indeterminate):not([data-indeterminate=true])~.mdc-checkbox__background {
        border-color: if($is-dark-theme, mat.get-color-from-palette($accent, 500), mat.get-color-from-palette($foreground, secondary-text));
      }
    }

    &.mat-primary {
      .mdc-checkbox .mdc-checkbox__native-control:enabled:not(:checked):not(:indeterminate):not([data-indeterminate=true])~.mdc-checkbox__background {
        border-color: if($is-dark-theme, mat.get-color-from-palette($primary, 500), mat.get-color-from-palette($foreground, secondary-text));
      }
    }
  }
}