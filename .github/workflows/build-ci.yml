name: Build CI

on:
  pull_request:
    types: [closed]
    branches: [15.x.x, hotfix/15.*]
    paths: ['projects/ontimize-web-ngx/**']

jobs:
  build:
    if: github.event_name == 'pull_request' && github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: 'Checkout code'
        uses: actions/checkout@v3

      - name: 'Cache node modules'
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # Setup .npmrc file to publish to GitHub Packages
      - name: Node 18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18.10.0
          registry-url: https://npm.pkg.github.com/
          # Defaults to the user or organization that owns the workflow file
          scope: "@OntimizeWeb"
          always-auth: true

      - name: obtain package.json version
        id: project
        run: |
          echo "version=$(node -pe "require('./package.json')['version']")" >> $GITHUB_OUTPUT

      - name: abort if not SNAPSHOT
        if: "!contains(steps.project.outputs.version, 'SNAPSHOT')"
        run: |
          echo "Version ${{ steps.project.outputs.version }} is not a properly named for SNAPSHOT"
          exit 1

      - name: bump SNAPSHOT version
        run: |
          npm version ${{ steps.project.outputs.version }}.$( date "+%s") --no-git-tag-version

      # Adpat artifact name to Github packages
      - name: Update package.json names
        run: |
          sed -i '2,2s/ontimize-web-ng/@OntimizeWeb\/ontimize-web-ng/g' package.json
          sed -i '2,2s/ontimize-web-ng/@OntimizeWeb\/ontimize-web-ng/g' projects/ontimize-web-ng/package.json

      - run: echo registry=https://npm.pkg.github.com/OntimizeWeb >> .npmrc

      - name: npm install and npm run build
        run: |
          npm i
          npm run build-prod

      - name: Publish SNAPSHOT
        env:
          NODE_AUTH_TOKEN: ${{ secrets.OWEB_GH_TOKEN_PUSH }}
        run: |
          npm publish dist/ --verbose --tag ${{ steps.project.outputs.version }}
