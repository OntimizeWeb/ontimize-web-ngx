name: Deploy snapshot to Github Packages

on:
  workflow_dispatch:
  push:
    branches:
      - "feature/deploy-github-packages"

env:
  LIBRARY_PATH: projects/ontimize-web-ngx


jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: 'Checkout code'
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: 'Cache node modules'
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Node 18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18.10.0
          registry-url: 'https://npm.pkg.github.com'
          # Defaults to the user or organization that owns the workflow file
          scope: '@OntimizeWeb'
          always-auth: true

      - name: obtain package.json version
        id: project
        run: |
          echo "version=$(node -pe "require('./package.json')['version']")" >> "$GITHUB_OUTPUT"
      - name: abort if not SNAPSHOT
        if: "!contains(steps.project.outputs.version, 'SNAPSHOT')"
        run: |
          echo "Version ${{ steps.project.outputs.version }} is not a properly named for SNAPSHOT"
          exit 1
      - name: bump SNAPSHOT version
        id: bump
        run: |
          bumpedVersion=${{ steps.project.outputs.version }}.$( date "+%s")
          npm version $bumpedVersion --no-git-tag-version
          echo "bumpVersion=$(node -pe "require('./package.json')['version']")" >> "$GITHUB_OUTPUT"
          cd ${{ env.LIBRARY_PATH }}
          npm version $bumpedVersion --no-git-tag-version

      - name: npm install
        run: |
          npm i

      # Adpat artifact name to Github packages
      - name: Update package.json names
        run: |
          sed -i '2,2s/ontimize-web-ngx/@OntimizeWeb\/ontimize-web-ngx/g' package.json
          sed -i '2,2s/ontimize-web-ngx/@OntimizeWeb\/ontimize-web-ngx/g' projects/ontimize-web-ngx/package.json

      - name: npm run build
        run: |
          npm run build-prod

      - name: Publish SNAPSHOT
        env:
          NODE_AUTH_TOKEN: ${{ secrets.OWEB_GH_TOKEN_PUSH }}
        run: |
          cd dist
          echo registry=https://npm.pkg.github.com/OntimizeWeb >> .npmrc
          npm publish --verbose --tag next

      - name: Add tag
        env:
          NODE_AUTH_TOKEN: ${{ secrets.OWEB_GH_TOKEN_PUSH }}
        run: |
          cd dist
          npm dist-tag add @ontimizeweb/ontimize-web-ngx@${{ steps.bump.outputs.bumpVersion }} "snapshot-15x"